import socket

def send_wol(mac_address: str, broadcast_ip: str = "192.168.50.255"):
    # –£–¥–∞–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ –∏–∑ MAC-–∞–¥—Ä–µ—Å–∞
    mac_address = mac_address.replace(":", "").replace("-", "").lower()
    if len(mac_address) != 12:
        raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π MAC-–∞–¥—Ä–µ—Å. –û–∂–∏–¥–∞–µ—Ç—Å—è 12 —Å–∏–º–≤–æ–ª–æ–≤ (6 –±–∞–π—Ç).")

    # –°–æ–∑–¥–∞–Ω–∏–µ magic packet
    mac_bytes = bytes.fromhex(mac_address)
    magic_packet = b'\xff' * 6 + mac_bytes * 16
    # –û—Ç–ø—Ä–∞–≤–∫–∞ UDP broadcast
    with socket.socket(socket.AF_INET, socket.SOCK_DGRAM) as sock:
        sock.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1)
        sock.sendto(magic_packet, (broadcast_ip, 9))

    print(f"‚úÖüöÄ WOL –ø–∞–∫–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ {mac_address.upper()} —á–µ—Ä–µ–∑ {broadcast_ip}")
 

def send_off(mac_address: str, broadcast_ip: str = "192.168.50.255"):
    # 
    mac_address = mac_address.replace(":", "").replace("-", "").lower()
    if len(mac_address) != 12:
        raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π MAC-–∞–¥—Ä–µ—Å. –û–∂–∏–¥–∞–µ—Ç—Å—è 12 —Å–∏–º–≤–æ–ª–æ–≤ (6 –±–∞–π—Ç).")

    # –°–æ–∑–¥–∞–Ω–∏–µ magic packet
    mac_bytes = bytes.fromhex(mac_address)
    # –°–æ–∑–¥–∞–µ–º magic packet –¥–ª—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞:
    # - 6 –±–∞–π—Ç 0x00 (–º–∞–≥–∏—á–µ—Å–∫–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è)
    # - 16 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π MAC-–∞–¥—Ä–µ—Å–∞ (96 –±–∞–π—Ç) - –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ WoL, –Ω–æ —Å –¥—Ä—É–≥–∏–º –º–∞–≥–∏—á–µ—Å–∫–∏–º —á–∏—Å–ª–æ–º
    magic_packet = b'\x00' * 6 + mac_bytes * 16

    # –û—Ç–ø—Ä–∞–≤–∫–∞ UDP broadcast
    with socket.socket(socket.AF_INET, socket.SOCK_DGRAM) as sock:
        sock.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1)
        sock.sendto(magic_packet, (broadcast_ip, 9))

    print(f"‚úÖ‚ö´Ô∏è OFF –ø–∞–∫–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ {mac_address.upper()} —á–µ—Ä–µ–∑ {broadcast_ip}")
 
def send_sleep(mac_address: str, broadcast_ip: str = "192.168.50.255"):
    # 
    mac_address = mac_address.replace(":", "").replace("-", "").lower()
    if len(mac_address) != 12:
        raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π MAC-–∞–¥—Ä–µ—Å. –û–∂–∏–¥–∞–µ—Ç—Å—è 12 —Å–∏–º–≤–æ–ª–æ–≤ (6 –±–∞–π—Ç).")

    # –°–æ–∑–¥–∞–Ω–∏–µ magic packet
    mac_bytes = bytes.fromhex(mac_address)
    # –°–æ–∑–¥–∞–µ–º magic packet –¥–ª—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞:
    # - 6 –±–∞–π—Ç 0x99 (–º–∞–≥–∏—á–µ—Å–∫–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è —Å–Ω–∞)
    # - 16 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π MAC-–∞–¥—Ä–µ—Å–∞ (96 –±–∞–π—Ç) - –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ WoL, –Ω–æ —Å –¥—Ä—É–≥–∏–º –º–∞–≥–∏—á–µ—Å–∫–∏–º —á–∏—Å–ª–æ–º
    magic_packet = b'\x99' * 6 + mac_bytes * 16

    # –û—Ç–ø—Ä–∞–≤–∫–∞ UDP broadcast
    with socket.socket(socket.AF_INET, socket.SOCK_DGRAM) as sock:
        sock.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1)
        sock.sendto(magic_packet, (broadcast_ip, 9))

    print(f"‚úÖüõèÔ∏è Sleep –ø–∞–∫–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ {mac_address.upper()} —á–µ—Ä–µ–∑ {broadcast_ip}")
 


if __name__ == "__main__":
    while True:
        print('–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:')
        print('1. –í–∫–ª—é—á–µ–Ω–∏–µ –ü–ö')
        print('2. –ü–µ—Ä–µ–≤–æ–¥ –≤ —Å–æ–Ω')
        print('3. –í—ã–∫–ª—é—á–µ–Ω–∏–µ –ü–ö')
        while True:
            inp = int(input())
            if inp == 1:
                send_wol('00:D8:61:33:5E:65', "192.168.50.255")
            elif inp == 2:
                send_sleep('00:D8:61:33:5E:65', "192.168.50.255")
            elif inp == 3:
                send_off('00:D8:61:33:5E:65', "192.168.50.255")
            else: 
                break